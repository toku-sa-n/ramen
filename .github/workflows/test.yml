# SPDX-License-Identifier: GPL-3.0-or-later

name: Test

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings -D absolute_paths_not_starting_with_crate -D rust_2021_incompatible_closure_captures -D elided_lifetimes_in_paths -D explicit_outlives_requirements -D macro_use_extern_crate -D meta_variable_misuse -D missing_abi -D missing_copy_implementations -D missing_debug_implementations -D non_ascii_idents -D pointer_structural_match -D semicolon_in_expressions_from_macros -D single_use_lifetimes -D trivial_casts -D trivial_numeric_casts -D unaligned_references -D unreachable_pub -D unused_extern_crates -D unused_import_braces -D unused_lifetimes -D unused_qualifications

jobs:
  fmt:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install rust nightly
      uses: actions-rs/toolchain@v1.0.6
      with:
        toolchain: nightly
        components: rustfmt, rust-src
        override: true

    - name: Run rustfmt with check mode
      run: |
        cargo fmt -- --check

  clippy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install rust nightly
      uses: actions-rs/toolchain@v1.0.6
      with:
        toolchain: nightly
        components: clippy, rust-src
        override: true

    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: -- -D clippy::pedantic -D clippy::all

    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --features qemu_test -- -D clippy::pedantic -D clippy::all

  udeps:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install rust nightly
      uses: actions-rs/toolchain@v1.0.6
      with:
        toolchain: nightly
        components: rust-src
        override: true

    - name: Run udeps
      run: |
        cargo install cargo-udeps
        cargo udeps

  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install rust nightly
      uses: actions-rs/toolchain@v1.0.6
      with:
        toolchain: nightly
        components: rust-src
        override: true

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install mtools qemu-system-x86 ovmf

    - name: Copy OVMF_*
      run: cp /usr/share/OVMF/OVMF_* .

    - name: Test
      timeout-minutes: 10
      run: ./run_qemu.sh -t
  test_per_crate:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install rust nightly
      uses: actions-rs/toolchain@v1.0.6
      with:
        toolchain: nightly
        components: rust-src
        override: true

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install mtools qemu-system-x86 ovmf

    - name: Copy OVMF_*
      run: cp /usr/share/OVMF/OVMF_* .

    - name: Test
      run: cargo test --workspace
